# Generated by Django 4.2.2 on 2023-07-18 23:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChessClub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('date', models.DateField(auto_now=True)),
                ('address', models.CharField(max_length=75, null=True)),
                ('city', models.CharField(max_length=30, null=True)),
                ('state', models.CharField(max_length=5, null=True)),
                ('zipcode', models.PositiveIntegerField(null=True)),
                ('details', models.CharField(max_length=100, null=True)),
                ('password', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GuestPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(default='Bob Ross', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friends', models.ManyToManyField(related_name='followers', to='villager_chess_api.player')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TimeSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_amount', models.IntegerField()),
                ('increment', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('date', models.DateField(auto_now=True)),
                ('rounds', models.IntegerField(default=1)),
                ('complete', models.BooleanField(default=False)),
                ('in_person', models.BooleanField(default=False)),
                ('pairings', models.JSONField(default=list)),
                ('club', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='club_tournaments', to='villager_chess_api.chessclub')),
                ('competitors', models.ManyToManyField(related_name='joined_tournaments', to='villager_chess_api.player')),
                ('creator', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='my_tournaments', to='villager_chess_api.player')),
                ('guest_competitors', models.ManyToManyField(related_name='joined_tournaments', to='villager_chess_api.guestplayer')),
                ('time_setting', models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tournaments_with_time_setting', to='villager_chess_api.timesetting')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=200)),
                ('date_time', models.DateTimeField(auto_now=True)),
                ('read', models.BooleanField()),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='villager_chess_api.player')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='villager_chess_api.player')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_player_w_id', models.PositiveIntegerField(null=True)),
                ('target_player_b_id', models.PositiveIntegerField(null=True)),
                ('target_winner_id', models.PositiveIntegerField(null=True)),
                ('date_time', models.DateTimeField(auto_now=True)),
                ('tournament_round', models.IntegerField(blank=True, default=1, null=True)),
                ('pgn', models.CharField(blank=True, max_length=400, null=True)),
                ('win_style', models.CharField(blank=True, max_length=20)),
                ('accepted', models.BooleanField(default=False)),
                ('bye', models.BooleanField(default=False)),
                ('computer_opponent', models.BooleanField(default=False)),
                ('target_player_b_ct', models.ForeignKey(limit_choices_to=models.Q(('model', 'Player'), ('model', 'GuestPlayer'), _connector='OR'), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player_b', to='contenttypes.contenttype')),
                ('target_player_w_ct', models.ForeignKey(limit_choices_to=models.Q(('model', 'Player'), ('model', 'GuestPlayer'), _connector='OR'), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player_w', to='contenttypes.contenttype')),
                ('target_winner_ct', models.ForeignKey(blank=True, limit_choices_to=models.Q(('model', 'Player'), ('model', 'GuestPlayer'), _connector='OR'), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winner', to='contenttypes.contenttype')),
                ('time_setting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='villager_chess_api.timesetting')),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games', to='villager_chess_api.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=200)),
                ('date_time', models.DateTimeField(auto_now=True)),
                ('club', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='community_posts', to='villager_chess_api.chessclub')),
                ('poster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='community_posts', to='villager_chess_api.player')),
            ],
        ),
        migrations.AddField(
            model_name='chessclub',
            name='guest_members',
            field=models.ManyToManyField(related_name='selected_guests_tournaments', to='villager_chess_api.guestplayer'),
        ),
        migrations.AddField(
            model_name='chessclub',
            name='manager',
            field=models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_clubs', to='villager_chess_api.player'),
        ),
        migrations.AddField(
            model_name='chessclub',
            name='members',
            field=models.ManyToManyField(related_name='my_clubs', to='villager_chess_api.player'),
        ),
    ]
